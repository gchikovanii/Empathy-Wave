@page "/register"
@using EmphatyWave.Web.Services.Accounts.Registrations
@inject RegisterService RegisterService;
@inject NavigationManager NavigationManager;
@rendermode InteractiveServer



<div class="loading-overlay" style="@(isLoading ? "display: flex;" : "display: none;")">
    <div class="spinner">
        <div class="wave wave1"></div>
        <div class="wave wave2"></div>
        <div class="wave wave3"></div>
    </div>
</div>


<section class="p-3 p-md-4 p-xl-5">
    <div class="container">
        <div class="card border-light-subtle shadow-sm">
            <div class="row g-0">
                <div class="col-12 col-md-6 custom-bg">
                    <div class="d-flex align-items-center justify-content-center h-100">
                        <div class="col-10 col-xl-8 py-3">
                            <img class="img-fluid rounded mb-4" loading="lazy" src="logoo.png" width="245" height="80" alt="BootstrapBrain Logo">
                            <hr class="border-primary-subtle mb-4">
                            <h2 class="h1 mb-4" style="color:#fff!important">At Emphaty Wave, we create self-care experiences that resonate.</h2>
                            <p class="lead m-0">Our passion lies in creating innovative products that harness the power of local and endemic plants, designed to nurture and rejuvenate. Explore our range and discover the essence of natural care.</p>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6">
                    <div class="card-body p-3 p-md-4 p-xl-5">
                        <div class="row">
                            <div class="col-12">
                                <div class="mb-5">
                                    <h3>Registration</h3>
                                </div>
                            </div>
                        </div>
                        <form action="#!">
                            <div class="row gy-3 gy-md-4 overflow-hidden">
                                <EditForm Model="RegisterModel" OnValidSubmit="Register" FormName="RegisterName">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    @if (!string.IsNullOrEmpty(errorMessage))
                                    {
                                        <div class="col-12">
                                            <div class="alert alert-danger" role="alert">
                                                @errorMessage
                                            </div>

                                        </div>
                                    }
                                    @if (isRegistrationSuccess)
                                    {
                                        <div class="col-12">
                                            <div class="alert alert-success" role="alert">
                                                Successfully registered, please check your inbox and confirm creation!
                                            </div>
                                        </div>
                                    }
                                    <div class="col-12 mt-2">
                                        <label for="email" class="form-label">Email <span class="text-danger">*</span></label>
                                        <InputText id="email" type="email" class="form-control form-control-lg rounded-pill border-pink text-pink" placeholder="user@example.com" @bind-Value="RegisterModel.Email" />
                                    </div>
                                    <div class="col-12 mt-2">
                                        <label for="userName" class="form-label">User Name <span class="text-danger">*</span></label>
                                        <InputText type="text" id="userName" typeof="userName" class="form-control form-control-lg rounded-pill border-pink text-pink" placeholder="UserName" @bind-Value="RegisterModel.UserName" />
                                    </div>
                                    <div class="col-12 mt-2">
                                        <label for="password" class="form-label">Password <span class="text-danger">*</span></label>
                                        <InputText id="password" type="password" placeholder="Pa$$w0rd" class="form-control form-control-lg rounded-pill border-pink text-pink" @bind-Value="RegisterModel.Password" />
                                    </div>
                                    <div class="col-12 mt-2">
                                        <div class="form-check">
                                            <InputCheckbox @bind-Value="Accept" class="form-check-input" id="accept_terms" />
                                            <label class="form-check-label text-secondary" for="accept_terms">
                                                Accept privacy & terms
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-12 mt-2">
                                        <div class="d-grid">
                                            <button class="btn bsb-btn-xl btn-primary-custom" type="submit" disabled="@(isLoading || !Accept)">Create Account</button>
                                        </div>
                                    </div>
                                </EditForm>

                            </div>
                        </form>
                        <div class="row">
                            <div class="col-12">
                                <hr class="mt-5 mb-4 border-secondary-subtle">
                                <div class="d-flex gap-2 gap-md-4 flex-column flex-md-row justify-content-md-end">
                                    <a href="/login" class="link-secondary text-decoration-none a-cust">Already have an Account?</a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private bool isLoading = false;
    private string? errorMessage;
    private bool Accept { get; set; }
    private bool isRegistrationSuccess = false;

    [SupplyParameterFromForm]
    public RegisterModel RegisterModel { get; set; } = new();

    private async Task Register()
    {
        isLoading = true;
        errorMessage = string.Empty;

        StateHasChanged();

        var result = await RegisterService.RegisterUser(RegisterModel);

        isLoading = false;

        if (result.IsSuccess)
        {
            isRegistrationSuccess = true;
            StateHasChanged();
            await Task.Delay(5000); 
            NavigationManager.NavigateTo("/login"); 
        }
        else
        {
            errorMessage = result.Result.Error.Message;
        }

        StateHasChanged();
    }
}

<style>
    body {
        background-color: #ffe6f0;
        font-family: 'Arial', sans-serif;
    }

    .card {
        background-color: #ffccdd;
        border: 1px solid #ff99bb;
    }

    .custom-bg {
        background-color: #ff99bb;
    }

    .text-bg-primary {
        background-color: #ff99bb;
        color: #fff;
    }

    h2, h3, h1 {
        color: #fff;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    }

    p, label, .link-secondary {
        color: #f3f3f3;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    }

    hr {
        border-color: #ff66a3;
    }

    .btn-primary-custom, .btn-outline-primary-custom {
        background-color: #ff6699;
        border-color: #FF1493;
        color: #fff;
        outline: none;
    }

        .btn-primary-custom:hover, .btn-outline-primary-custom:hover {
            background-color: #FF1493;
            border-color: #cc0052;
            color: #fff;
            outline: none;
        }

    .form-control {
        background-color: #ffe6f0;
        border-color: #ff99bb;
        color: #cc0052;
    }

        .form-control:focus {
            border-color: #FF1493;
            box-shadow: 0 0 0 0.2rem rgba(255, 0, 102, 0.25);
            outline: none;
        }

    .form-check-input:checked {
        background-color: #ff0066;
        border-color: #ff0066;
    }

    .form-check-label {
        color: #cc0052;
    }

    .link-secondary:hover {
        color: #ff0066;
    }

    .a-cust {
        color: #ff6699;
    }

        .a-cust:hover {
            color: #ff0066;
        }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    .spinner {
        display: flex;
        gap: 10px;
    }

    .wave {
        width: 15px;
        height: 15px;
        background-color: pink;
        border-radius: 50%;
        animation: wave 1s infinite ease-in-out;
    }

    .wave1 {
        animation-delay: 0s;
    }

    .wave2 {
        animation-delay: 0.2s;
    }

    .wave3 {
        animation-delay: 0.4s;
    }

    .btn-primary-custom:focus, .btn-outline-primary-custom:focus {
        outline: none;
        box-shadow: none;
    }

    @@keyframes wave {
        0%, 100% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-15px);
        }
    }
</style>